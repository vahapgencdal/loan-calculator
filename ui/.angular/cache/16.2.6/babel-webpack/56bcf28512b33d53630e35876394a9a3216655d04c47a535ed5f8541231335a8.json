{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class LoanService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:8080/api/v1/loans';\n  }\n  getLoans() {\n    return this.http.get(this.apiUrl);\n  }\n  createLoan(loanData) {\n    return this.http.post(this.apiUrl, loanData);\n  }\n  updateLoan(loanId, loanData) {\n    return this.http.put(`${this.apiUrl}/${loanId}`, loanData);\n  }\n  deleteLoan(loanId) {\n    return this.http.delete(`${this.apiUrl}/${loanId}`);\n  }\n  getLoan(loanId) {\n    return this.http.get(`${this.apiUrl}/${loanId}`);\n  }\n  static #_ = this.ɵfac = function LoanService_Factory(t) {\n    return new (t || LoanService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: LoanService,\n    factory: LoanService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["LoanService","constructor","http","apiUrl","getLoans","get","createLoan","loanData","post","updateLoan","loanId","put","deleteLoan","delete","getLoan","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\projects\\tekbit\\loan-app\\src\\app\\service\\loan.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoanService {\n  private apiUrl = 'http://localhost:8080/api/v1/loans';\n\n  constructor(private http: HttpClient) {}\n\n  getLoans(): Observable<any[]> {\n    return this.http.get<any[]>(this.apiUrl);\n  }\n\n  createLoan(loanData: any): Observable<any> {\n    return this.http.post<any>(this.apiUrl, loanData);\n  }\n\n  updateLoan(loanId: number, loanData: any): Observable<any> {\n    return this.http.put<any>(`${this.apiUrl}/${loanId}`, loanData);\n  }\n\n  deleteLoan(loanId: number): Observable<any> {\n    return this.http.delete(`${this.apiUrl}/${loanId}`);\n  }\n\n  getLoan(loanId: number): Observable<any> {\n    return this.http.get(`${this.apiUrl}/${loanId}`);\n  }\n\n\n}\n"],"mappings":";;AAOA,OAAM,MAAOA,WAAW;EAGtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,oCAAoC;EAEd;EAEvCC,QAAQA,CAAA;IACN,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAQ,IAAI,CAACF,MAAM,CAAC;EAC1C;EAEAG,UAAUA,CAACC,QAAa;IACtB,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAM,IAAI,CAACL,MAAM,EAAEI,QAAQ,CAAC;EACnD;EAEAE,UAAUA,CAACC,MAAc,EAAEH,QAAa;IACtC,OAAO,IAAI,CAACL,IAAI,CAACS,GAAG,CAAM,GAAG,IAAI,CAACR,MAAM,IAAIO,MAAM,EAAE,EAAEH,QAAQ,CAAC;EACjE;EAEAK,UAAUA,CAACF,MAAc;IACvB,OAAO,IAAI,CAACR,IAAI,CAACW,MAAM,CAAC,GAAG,IAAI,CAACV,MAAM,IAAIO,MAAM,EAAE,CAAC;EACrD;EAEAI,OAAOA,CAACJ,MAAc;IACpB,OAAO,IAAI,CAACR,IAAI,CAACG,GAAG,CAAC,GAAG,IAAI,CAACF,MAAM,IAAIO,MAAM,EAAE,CAAC;EAClD;EAAC,QAAAK,CAAA,G;qBAvBUf,WAAW,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXpB,WAAW;IAAAqB,OAAA,EAAXrB,WAAW,CAAAsB,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}